#! /bin/bash

# This script is created by Mukaram Pasha.
echo ""
echo ""
figlet -f big "Nmap Script"
echo ""
echo ""
echo ""
echo -e "\e[1;46m Created by - \e[0m"
figlet -f small "Mukaram Pasha"
echo ""
echo -e "\e[1;31m Linkedin - https://www.linkedin.com/in/mukaram-pasha-67708315b \e[0m"
echo ""
echo ""
echo -e "\e[1;36mScript running time \e[0m"
date
echo ""
echo ""
echo ""
echo ""
echo -e "\e[1;45m The script is running, you will be notified once it is completed.. \e[0m"

sleep 7

############################


rm SSH*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*ssh*"")
   echo $IP_ADDRESS > SSH-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*ssh*"")
   echo $PORT > SSH_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat SSH-IP-ADDRESS* > SSH_IPs.txt
cat SSH_Port_* > SSH_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' SSH_Ports.txt >SSH_Ports2.txt
sed '$! { P; D; }; s/.$//' SSH_Ports2.txt >> SSH_Ports3.txt
rm SSH_Port_*
rm SSH-IP-ADDRESS_*

clear

############################

rm HTTP*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*http*"")
   echo $IP_ADDRESS > HTTP-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*http*"")
   echo $PORT > HTTP_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat HTTP-IP-ADDRESS* > HTTP_IPs.txt
cat HTTP_Port_* > HTTP_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' HTTP_Ports.txt >HTTP_Ports2.txt
sed '$! { P; D; }; s/.$//' HTTP_Ports2.txt >> HTTP_Ports3.txt
rm HTTP_Port_*
rm HTTP-IP-ADDRESS*
mkdir scan_results
clear

############################

rm SSL*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*ssl*"")
   echo $IP_ADDRESS > SSL-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*ssl*"")
   echo $PORT > SSL_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat SSL-IP-ADDRESS* > SSL_IPs.txt
cat SSL_Port_* > SSL_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' SSL_Ports.txt >SSL_Ports2.txt
sed '$! { P; D; }; s/.$//' SSL_Ports2.txt >> SSL_Ports3.txt
rm SSL_Port_*
rm SSL-IP-ADDRESS*
mkdir scan_results
clear

############################

rm FTP*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*ftp*"")
   echo $IP_ADDRESS > FTP-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*ftp*"")
   echo $PORT > FTP_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat FTP-IP-ADDRESS* > FTP_IPs.txt
cat FTP_Port_* > FTP_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' FTP_Ports.txt >FTP_Ports2.txt
sed '$! { P; D; }; s/.$//' FTP_Ports2.txt >> FTP_Ports3.txt
rm FTP_Port_*
rm FTP-IP-ADDRESS*
mkdir scan_results
clear

############################

rm SMTP*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*smtp*"")
   echo $IP_ADDRESS > SMTP-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*smtp*"")
   echo $PORT > SMTP_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat SMTP-IP-ADDRESS* > SMTP_IPs.txt
cat SMTP_Port_* > SMTP_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' SMTP_Ports.txt >SMTP_Ports2.txt
sed '$! { P; D; }; s/.$//' SMTP_Ports2.txt >> SMTP_Ports3.txt
rm SMTP_Port_*
rm SMTP-IP-ADDRESS_*

clear

############################

rm TELNET*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*telnet*"")
   echo $IP_ADDRESS > TELNET-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*telnet*"")
   echo $PORT > TELNET_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat TELNET-IP-ADDRESS* > TELNET_IPs.txt
cat TELNET_Port_* > TELNET_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' TELNET_Ports.txt >TELNET_Ports2.txt
sed '$! { P; D; }; s/.$//' TELNET_Ports2.txt >> TELNET_Ports3.txt
rm TELNET_Port_*
rm TELNET-IP-ADDRESS_*

clear

############################

rm DNS*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*dns*"")
   echo $IP_ADDRESS > DNS-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*dns*"")
   echo $PORT > DNS_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat DNS-IP-ADDRESS* > DNS_IPs.txt
cat DNS_Port_* > DNS_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' DNS_Ports.txt >DNS_Ports2.txt
sed '$! { P; D; }; s/.$//' DNS_Ports2.txt >> DNS_Ports3.txt
rm DNS_Port_*
rm DNS-IP-ADDRESS_*

clear

############################

rm KERBEROS*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*kerberos*"")
   echo $IP_ADDRESS > KERBEROS-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*kerberos*"")
   echo $PORT > KERBEROS_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat KERBEROS-IP-ADDRESS* > KERBEROS_IPs.txt
cat KERBEROS_Port_* > KERBEROS_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' KERBEROS_Ports.txt >KERBEROS_Ports2.txt
sed '$! { P; D; }; s/.$//' KERBEROS_Ports2.txt >> KERBEROS_Ports3.txt
rm KERBEROS_Port_*
rm KERBEROS-IP-ADDRESS_*

clear

############################

rm DHCP*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*dhcp*"")
   echo $IP_ADDRESS > DHCP-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*dhcp*"")
   echo $PORT > DHCP_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat DHCP-IP-ADDRESS* > DHCP_IPs.txt
cat DHCP_Port_* > DHCP_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' DHCP_Ports.txt >DHCP_Ports2.txt
sed '$! { P; D; }; s/.$//' DHCP_Ports2.txt >> DHCP_Ports3.txt
rm DHCP_Port_*
rm DHCP-IP-ADDRESS_*

clear

############################

rm RTSP*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*rtsp*"")
   echo $IP_ADDRESS > RTSP-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*rtsp*"")
   echo $PORT > RTSP_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat RTSP-IP-ADDRESS* > RTSP_IPs.txt
cat RTSP_Port_* > RTSP_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' RTSP_Ports.txt >RTSP_Ports2.txt
sed '$! { P; D; }; s/.$//' RTSP_Ports2.txt >> RTSP_Ports3.txt
rm RTSP_Port_*
rm RTSP-IP-ADDRESS_*

clear

############################

rm NTP*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*ntp*"")
   echo $IP_ADDRESS > NTP-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*ntp*"")
   echo $PORT > NTP_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat NTP-IP-ADDRESS* > NTP_IPs.txt
cat NTP_Port_* > NTP_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' NTP_Ports.txt >NTP_Ports2.txt
sed '$! { P; D; }; s/.$//' NTP_Ports2.txt >> NTP_Ports3.txt
rm NTP_Port_*
rm NTP-IP-ADDRESS_*

clear

############################

rm SQL*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*sql*"")
   echo $IP_ADDRESS > SQL-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*sql*"")
   echo $PORT > SQL_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat SQL-IP-ADDRESS* > SQL_IPs.txt
cat SQL_Port_* > SQL_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' SQL_Ports.txt >SQL_Ports2.txt
sed '$! { P; D; }; s/.$//' SQL_Ports2.txt >> SQL_Ports3.txt
rm SQL_Port_*
rm SQL-IP-ADDRESS_*

clear

############################

rm POP3*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*pop3*"")
   echo $IP_ADDRESS > POP3-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*pop3*"")
   echo $PORT > POP3_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat POP3-IP-ADDRESS* > POP3_IPs.txt
cat POP3_Port_* > POP3_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' POP3_Ports.txt >POP3_Ports2.txt
sed '$! { P; D; }; s/.$//' POP3_Ports2.txt >> POP3_Ports3.txt
rm POP3_Port_*
rm POP3-IP-ADDRESS_*

clear

############################

rm IMAP*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*imap*"")
   echo $IP_ADDRESS > IMAP-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*imap*"")
   echo $PORT > IMAP_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat IMAP-IP-ADDRESS* > IMAP_IPs.txt
cat IMAP_Port_* > IMAP_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' IMAP_Ports.txt >IMAP_Ports2.txt
sed '$! { P; D; }; s/.$//' IMAP_Ports2.txt >> IMAP_Ports3.txt
rm IMAP_Port_*
rm IMAP-IP-ADDRESS_*

clear

############################

rm NETBIOS*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*netbios*"")
   echo $IP_ADDRESS > NETBIOS-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*netbios*"")
   echo $PORT > NETBIOS_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat NETBIOS-IP-ADDRESS* > NETBIOS_IPs.txt
cat NETBIOS_Port_* > NETBIOS_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' NETBIOS_Ports.txt >NETBIOS_Ports2.txt
sed '$! { P; D; }; s/.$//' NETBIOS_Ports2.txt >> NETBIOS_Ports3.txt
rm NETBIOS_Port_*
rm NETBIOS-IP-ADDRESS_*

clear

############################

rm MICROSOFT-DS*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*microsoft-ds*"")
   echo $IP_ADDRESS > MICROSOFT-DS-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*microsoft-ds*"")
   echo $PORT > MICROSOFT-DS_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat MICROSOFT-DS-IP-ADDRESS* > MICROSOFT-DS_IPs.txt
cat MICROSOFT-DS_Port_* > MICROSOFT-DS_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' MICROSOFT-DS_Ports.txt >MICROSOFT-DS_Ports2.txt
sed '$! { P; D; }; s/.$//' MICROSOFT-DS_Ports2.txt >> MICROSOFT-DS_Ports3.txt
rm MICROSOFT-DS_Port_*
rm MICROSOFT-DS-IP-ADDRESS_*

clear

############################

rm LDAP*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*ldap*"")
   echo $IP_ADDRESS > LDAP-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*ldap*"")
   echo $PORT > LDAP_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat LDAP-IP-ADDRESS* > LDAP_IPs.txt
cat LDAP_Port_* > LDAP_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' LDAP_Ports.txt >LDAP_Ports2.txt
sed '$! { P; D; }; s/.$//' LDAP_Ports2.txt >> LDAP_Ports3.txt
rm LDAP_Port_*
rm LDAP-IP-ADDRESS_*

clear

############################

rm ISAKMP*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*isakmp*"")
   echo $IP_ADDRESS > ISAKMP-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*isakmp*"")
   echo $PORT > ISAKMP_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat ISAKMP-IP-ADDRESS* > ISAKMP_IPs.txt
cat ISAKMP_Port_* > ISAKMP_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' ISAKMP_Ports.txt >ISAKMP_Ports2.txt
sed '$! { P; D; }; s/.$//' ISAKMP_Ports2.txt >> ISAKMP_Ports3.txt
rm ISAKMP_Port_*
rm ISAKMP-IP-ADDRESS_*

clear

############################

rm MS-WBT-SERVER*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*ms-wbt-server*"")
   echo $IP_ADDRESS > MS-WBT-SERVER-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*ms-wbt-server*"")
   echo $PORT > MS-WBT-SERVER_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat MS-WBT-SERVER-IP-ADDRESS* > MS-WBT-SERVER_IPs.txt
cat MS-WBT-SERVER_Port_* > MS-WBT-SERVER_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' MS-WBT-SERVER_Ports.txt >MS-WBT-SERVER_Ports2.txt
sed '$! { P; D; }; s/.$//' MS-WBT-SERVER_Ports2.txt >> MS-WBT-SERVER_Ports3.txt
rm MS-WBT-SERVER_Port_*
rm MS-WBT-SERVER-IP-ADDRESS_*

clear

############################

rm SNMP*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*snmp*"")
   echo $IP_ADDRESS > SNMP-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*snmp*"")
   echo $PORT > SNMP_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat SNMP-IP-ADDRESS* > SNMP_IPs.txt
cat SNMP_Port_* > SNMP_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' SNMP_Ports.txt >SNMP_Ports2.txt
sed '$! { P; D; }; s/.$//' SNMP_Ports2.txt >> SNMP_Ports3.txt
rm SNMP_Port_*
rm SNMP-IP-ADDRESS_*

clear

############################

rm RPC*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*rpc*"")
   echo $IP_ADDRESS > RPC-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*rpc*"")
   echo $PORT > RPC_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat RPC-IP-ADDRESS* > RPC_IPs.txt
cat RPC_Port_* > RPC_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' RPC_Ports.txt >RPC_Ports2.txt
sed '$! { P; D; }; s/.$//' RPC_Ports2.txt >> RPC_Ports3.txt
rm RPC_Port_*
rm RPC-IP-ADDRESS_*

clear

############################

rm AJP*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*ajp*"")
   echo $IP_ADDRESS > AJP-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*ajp*"")
   echo $PORT > AJP_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat AJP-IP-ADDRESS* > AJP_IPs.txt
cat AJP_Port_* > AJP_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' AJP_Ports.txt >AJP_Ports2.txt
sed '$! { P; D; }; s/.$//' AJP_Ports2.txt >> AJP_Ports3.txt
rm AJP_Port_*
rm AJP-IP-ADDRESS_*

clear

############################

rm X11*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*x11*"")
   echo $IP_ADDRESS > X11-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*x11*"")
   echo $PORT > X11_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat X11-IP-ADDRESS* > X11_IPs.txt
cat X11_Port_* > X11_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' X11_Ports.txt >X11_Ports2.txt
sed '$! { P; D; }; s/.$//' X11_Ports2.txt >> X11_Ports3.txt
rm X11_Port_*
rm X11-IP-ADDRESS_*

clear

############################

rm RMI*
while IFS="," read -r IP_ADDRESS SERVICE PORT
do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in

""*x11*"")
   echo $IP_ADDRESS > RMI-IP-ADDRESS_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

while IFS="," read -r IP_ADDRESS SERVICE PORT

do
TEMPNUM="$SERVICE"
case "$TEMPNUM" in
""*x11*"")
   echo $PORT > RMI_Port_$IP_ADDRESS-$PORT.txt
   ;;
 esac
done < <(tail -n +2 data.csv)

echo ""
echo ""
cat RMI-IP-ADDRESS* > RMI_IPs.txt
cat RMI_Port_* > RMI_Ports.txt
awk  '{ printf( "%s,", $1 ); } END { printf( "\n" ); }' RMI_Ports.txt >RMI_Ports2.txt
sed '$! { P; D; }; s/.$//' RMI_Ports2.txt >> RMI_Ports3.txt
rm RMI_Port_*
rm RMI-IP-ADDRESS_*


awk -i inplace '!seen[$0]++'  *.txt

clear

############################

############################

echo -e "\e[1;35mRemoving duplicate ports, ignore the duplicate ports error.. \e[0m"
sleep 5
nmap --script=banner,http-apache-negotiation,http-auth,http-sql-injection,http-auth-finder,http-methods,http-axis2-dir-traversal,http-backup-finder,http-barracuda-dir-traversal,http-cakephp-version,http-brute,http-config-backup,http-default-accounts,http-enum,http-generator,http-headers,http-iis-webdav-vuln,http-majordomo2-dir-traversal,http-method-tamper,http-open-proxy,http-open-redirect,http-passwd,http-php-version,http-phpself-xss,http-rfi-spider,http-robots.txt,http-sitemap-generator,http-title,http-unsafe-output-escaping,http-userdir-enum,http-vuln-cve2010-2861,http-vuln-cve2012-1823,http-wordpress-enum,http-traceroute,http-frontpage-login,http-drupal-enum-users,http-tplink-dir-traversal,http-internal-ip-disclosure,ssl* -Pn -iL HTTP_IPs.txt  -p$(tr '\n' , <HTTP_Ports3.txt) -sV > scan_results/HTTP_NMAP_SCAN.txt
clear
echo -e "\e[1;35mHTTP service scan completed, running scans on other services.. \e[0m"
nmap --script=ssh-hostkey,ssh2-enum-algos,sshv1,ssh-auth-methods,ssh-publickey-acceptance,ssh-run -Pn -p$(tr '\n' , <SSH_Ports3.txt) -sV -iL SSH_IPs.txt > scan_results/SSH_NMAP_SCAN.txt
clear
echo -e "\e[1;35mSSH service scan completed, running scans on other services.. \e[0m"
nmap --script=ssl* -Pn -p$(tr '\n' , <SSL_Ports3.txt) -sV -iL SSL_IPs.txt > scan_results/SSL_NMAP_SCAN.txt
clear
echo -e "\e[1;35mSSL service scan completed, running scans on other services.. \e[0m"
nmap --script=ftp-anon,ftp-bounce,ftp-libopie,ftp-proftpd-backdoor,ftp-syst,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221 -Pn -p$(tr '\n' , <FTP_Ports3.txt) -sV -iL FTP_IPs.txt > scan_results/FTP_NMAP_SCAN.txt
clear
echo -e "\e[1;35mFTP service scan completed, running scans on other services.. \e[0m"
nmap --script=smtp* -Pn -p$(tr '\n' , <SMTP_Ports3.txt) -sV -iL SMTP_IPs.txt > scan_results/SMTP_NMAP_SCAN.txt
clear
echo -e "\e[1;35mSMTP service scan completed, running scans on other services.. \e[0m"
nmap --script=telnet* -Pn -p$(tr '\n' , <TELNET_Ports3.txt) -sV -iL TELNET_IPs.txt > scan_results/TELNET_NMAP_SCAN.txt
clear
echo -e "\e[1;35mTELNET service scan completed, running scans on other services.. \e[0m"
nmap --script=dns* -Pn -p$(tr '\n' , <DNS_Ports3.txt) -sV -iL DNS_IPs.txt > scan_results/DNS_NMAP_SCAN.txt
clear
echo -e "\e[1;35mDNS service scan completed, running scans on other services.. \e[0m"
nmap --script=krb5-enum-users,krb5-* -Pn -p$(tr '\n' , <KERBEROS_Ports3.txt) -sV -iL KERBEROS_IPs.txt > scan_results/KERBEROS_NMAP_SCAN.txt
clear
echo -e "\e[1;35mKERBEROS service scan completed, running scans on other services.. \e[0m"
nmap --script=dhcp-* -sU -Pn -p$(tr '\n' , <DHCP_Ports3.txt) -sV -iL DHCP_IPs.txt > scan_results/DHCP_NMAP_SCAN.txt
clear
echo -e "\e[1;35mDHCP service scan completed, running scans on other services.. \e[0m"
nmap --script=rtsp-* -Pn -p$(tr '\n' , <RTSP_Ports3.txt) -sV -iL RTSP_IPs.txt > scan_results/RTSP_NMAP_SCAN.txt
clear
echo -e "\e[1;35mRTSP service scan completed, running scans on other services.. \e[0m"
nmap --script=ntp-* -Pn -sU -p$(tr '\n' , <NTP_Ports3.txt) -sV -iL NTP_IPs.txt > scan_results/NTP_NMAP_SCAN.txt
clear
echo -e "\e[1;35mNTP service scan completed, running scans on other services.. \e[0m"
nmap --script=ms-sql-* -Pn -p$(tr '\n' , <SQL_Ports3.txt) -sV -iL SQL_IPs.txt > scan_results/SQL_NMAP_SCAN.txt
clear
echo -e "\e[1;35mSQL service scan completed, running scans on other services.. \e[0m"
nmap --script=pop3-* -Pn -p$(tr '\n' , <POP3_Ports3.txt) -sV -iL POP3_IPs.txt > scan_results/POP3_NMAP_SCAN.txt
clear
echo -e "\e[1;35mPOP3 service scan completed, running scans on other services.. \e[0m"
nmap --script=imap-* -Pn -p$(tr '\n' , <IMAP_Ports3.txt) -sV -iL IMAP_IPs.txt > scan_results/IMAP_NMAP_SCAN.txt
clear
echo -e "\e[1;35mIMAP service scan completed, running scans on other services.. \e[0m"
nmap --script=nbstat -Pn -p$(tr '\n' , <NETBIOS_Ports3.txt) -sV -iL NETBIOS_IPs.txt > scan_results/NETBIOS_NMAP_SCAN.txt
clear
echo -e "\e[1;35mNETBIOS service scan completed, running scans on other services.. \e[0m"
nmap --script=smb-enum-groups,smb-enum-processes,smb-enum-sessions,smb-enum-shares,smb-enum-users,smb-ls,smb-os-discovery,smb-security-mode,smb-server-stats,smb-system-info,smb-protocols,smb2-security-mode,smb-vuln-* -Pn -p$(tr '\n' , <MICROSOFT-DS_Ports3.txt) -sV -iL MICROSOFT-DS_IPs.txt > scan_results/MICROSOFT-DS_NMAP_SCAN.txt
nmap --script=ldap-*,ssl-* -Pn -p$(tr '\n' , <LDAP_Ports3.txt) -sV -iL LDAP_IPs.txt > scan_results/LDAP_NMAP_SCAN.txt
clear
echo -e "\e[1;35mLDAP service scan completed, running scans on other services.. \e[0m"
nmap --script=ike-*,ike-version -sU -Pn -p$(tr '\n' , <ISAKMP_Ports3.txt) -sV -iL ISAKMP_IPs.txt > scan_results/ISAKMP_NMAP_SCAN.txt
clear
echo -e "\e[1;35mISAKMP service scan completed, running scans on other services.. \e[0m"
nmap --script=rdp-enum-*,rdp-vuln-* -Pn -p$(tr '\n' , <MS-WBT-SERVER_Ports3.txt) -sV -iL MS-WBT-SERVER_IPs.txt > scan_results/MS-WBT-SERVER_NMAP_SCAN.txt
clear
echo -e "\e[1;35mRDP service scan completed, running scans on other services.. \e[0m"
nmap --script=snmp-* -sU -Pn -p$(tr '\n' , <SNMP_Ports3.txt) -sV -iL SNMP_IPs.txt > scan_results/SNMP_NMAP_SCAN.txt
clear
echo -e "\e[1;35mSNMP service scan completed, running scans on other services.. \e[0m"
nmap --script=rpc-*,rpcinfo -Pn -p$(tr '\n' , <RPC_Ports3.txt) -sV -iL RPC_IPs.txt > scan_results/RPC_NMAP_SCAN.txt
clear
echo -e "\e[1;35mRPC service scan completed, running scans on other services.. \e[0m"
nmap --script=ajp-* -Pn -p$(tr '\n' , <AJP_Ports3.txt) -sV -iL AJP_IPs.txt > scan_results/AJP_NMAP_SCAN.txt
clear
echo -e "\e[1;35mAJP service scan completed, running scans on other services.. \e[0m"
nmap --script=x11-* -Pn -p$(tr '\n' , <X11_Ports3.txt) -sV -iL X11_IPs.txt > scan_results/X11_NMAP_SCAN.txt
clear
echo -e "\e[1;35mX11 service scan completed, running scans on other services.. \e[0m"
nmap --script=rmi-* -Pn -p$(tr '\n' , <RMI_Ports3.txt) -sV -iL RMI_IPs.txt > scan_results/RMI_NMAP_SCAN.txt
clear
echo -e "\e[1;35mRMI service scan completed, running scans on other services.. \e[0m"

clear
figlet         3
sleep 0.7
clear
figlet         2
sleep 0.7
clear
figlet         1
sleep 0.7
echo -e "\a"
clear
figlet -f big "Nmap Script"
echo ""
echo ""
echo -e "\e[1;46m Created by - \e[0m"
figlet -f small "Mukaram Pasha"
echo ""
echo -e "\e[1;31m Linkedin - https://www.linkedin.com/in/mukaram-pasha-67708315b \e[0m"
echo ""
echo ""
echo -e "\e[1;36mScript completed at: \e[0m"
date
echo ""
echo ""
echo ""
echo -e "\e[1;45m Scanning completed, Results are saved in the folder 'scan_results'... \e[0m"
echo ""
echo ""
rm SSH_Port*
rm SSH_IPs*
rm HTTP_Port*
rm HTTP_IPs*
rm SSL_Port*
rm SSL_IPs*
rm FTP_Port*
rm FTP_IPs*
rm SMTP_Port*
rm SMTP_IPs*
rm TELNET_Port*
rm TELNET_IPs*
rm DNS_Port*
rm DNS_IPs*
rm KERBEROS_Port*
rm KERBEROS_IPs*
rm DHCP_Port*
rm DHCP_IPs*
rm RTSP_Port*
rm RTSP_IPs*
rm NTP_Port*
rm NTP_IPs*
rm SQL_Port*
rm SQL_IPs*
rm POP3_Port*
rm POP3_IPs*
rm IMAP_Port*
rm IMAP_IPs*
rm NETBIOS_Port*
rm NETBIOS_IPs*
rm MICROSOFT-DS_Port*
rm MICROSOFT-DS_IPs*
rm LDAP_Port*
rm LDAP_IPs*
rm MS-WBT-SERVER_Port*
rm MS-WBT-SERVER_IPs*
rm SNMP_Port*
rm SNMP_IPs*
rm RPC_Port*
rm RPC_IPs*
rm ISAKMP_Port*
rm ISAKMP_IPs*
rm AJP_Port*
rm AJP_IPs*
rm X11_Port*
rm X11_IPs*
rm RMI_Port*
rm RMI_IPs*

cd scan_results
find . -type f -size 0b -delete
find -type f -size -65c -delete
cd ..
